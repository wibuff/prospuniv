- Merge templates into recipes file
- Model ValStream not handling multiple inventories correctly
    - single merged inventory between prom and monty... need to draw only from local
- Add units sold on the market per day to the graph file
    - will need to add sales volumes to market data
- Figure net value factor based on total units sold per day
    - net potential value per day? unitsperday * netvalueperitem? (repeat for gross, costs, etc.)
- Add expert configuration to run fingerprint (run logging)
- Update market lookup to take exchange specific ticker, e.g., H2O.IC1, H2O.NCC, etc. 
    - perhaps leave current init and default to the init currency when just provided a ticker
- Update inventory file to include all inventories
- Refactor prod lines to use new format recipe file
- Check validity of site configuration (space and workers)
- Handle transfer/shipping between sites (time lag, estimated fuel cost
- Report on building conditions
- Calculate remaining days of worker supply for each MAT at each base
- Track cash liquid assets
- Log run details to run-specific logging instead of using stdout and routing to file
    - per production line files
    - probably in new sub directory
- Auto generate, validate, and run multiple valstream files for comparison
- Acquire worker resources from the market
    - as needed
    - simple scheduled buys
    - conditional buys (e.g. purchase when below threshold)
- Generate product lines from extract
- Provide Net Gain/Loss in multiple currencies
- Track sales as revenue
- Track resource consumption as expense
- Log key metrics from runs to a single location
    - identify source value stream, inventory, market files
- Add Income Statement - overall  
- Add Income Statement - for each production line
- Daily Reporting - resource consumption/production
- Auto-generate value streams based on inputs/outputs
- Worker file generation efficiency value is hardcoded - is there a better source?
- Handle multiple sites in extract building data 
    - generated building config is only accurate for single sites
    - different sites will have different material costs and possibly availability
- Calculation and addition of manufacturing fees
- Add building condition to line efficiency - 
    - dropped 100.0% to 99.9% after period 1 (1 week)
    - dropped 99.9% to 99.8% after period 2
    - after looking at game state data
        - after 1 period -> 0.9986588887019383 -> displayed as 99.9
        - after 2 periods -> 0.9976757724905609 -> displayed as 99.8
- Addition of building depreciation... 
    - dropped 1/26 of value after period 1 (1 week?)
    - appears to depreciate over a 26 week period 
- Sell resources to the market 
- Worker efficiency edge cases (running below 100% of required essential supply)
- model worker barracks and pool of available workers
